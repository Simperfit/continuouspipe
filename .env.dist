## Welcome in the configuration of ContinuousPipe
#
#~ Please run the `bin/start` command.
#~ This file is the template for the environment configuration. It contains metadata and details on each of the
#~ variables. It is not intended to read by humans.

## GitHub
# In order to be able to login with GitHub and access the repositories, you need to create a GitHub Application.
#
#~+github-oauth(GITHUB_CLIENT_ID GITHUB_CLIENT_SECRET)
#~+github-integration(GITHUB_INTEGRATION_ID GITHUB_INTEGRATION_KEY_NAME GITHUB_SECRET)
#+file-to-propagate(GITHUB_INTEGRATION_PRIVATE_KEY_PATH)
#
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_INTEGRATION_ID=
GITHUB_INTEGRATION_SLUG=
GITHUB_SECRET=

#~ Note: Do not change this path. It needs to stay what it is.
GITHUB_INTEGRATION_PRIVATE_KEY_PATH=/runtime/keys/github.pem

## Realtime logs
# In order to present realtime logs of your builds, ContinuousPipe uses Firebase.
#
#+file-to-propagate(FIREBASE_SERVICE_ACCOUNT_PATH)
#
FIREBASE_APP=
FIREBASE_WEB_API_KEY=

#~ Note: Do not change this path. It needs to stay what it is.
FIREBASE_SERVICE_ACCOUNT_PATH=/runtime/keys/firebase.json

## Docker images
# How to build the docker image. There are two engines at the moment: "gcb" (recommended, Google Container Builder)
# and "docker" for the local docker deamon.
#
#+only-if(GOOGLE_CONTAINER_BUILDER_SOURCE_BUCKET):(GOOGLE_CONTAINER_BUILDER_ENABLED=true)
#+only-if(GOOGLE_CONTAINER_BUILDER_PROJECT_ID):(GOOGLE_CONTAINER_BUILDER_ENABLED=true)
#+only-if(GOOGLE_CONTAINER_BUILDER_SERVICE_ACCOUNT_PATH):(GOOGLE_CONTAINER_BUILDER_ENABLED=true)
#+only-if(GOOGLE_CONTAINER_BUILDER_IMAGE):(GOOGLE_CONTAINER_BUILDER_ENABLED=true)
#+only-if(GOOGLE_CONTAINER_BUILDER_VERSION):(GOOGLE_CONTAINER_BUILDER_ENABLED=true)
#+file-to-propagate(GOOGLE_CONTAINER_BUILDER_SERVICE_ACCOUNT_PATH)
#
BUILDER_DEFAULT_ENGINE=docker

GOOGLE_CONTAINER_BUILDER_ENABLED=false
GOOGLE_CONTAINER_BUILDER_SOURCE_BUCKET=
GOOGLE_CONTAINER_BUILDER_PROJECT_ID=
GOOGLE_CONTAINER_BUILDER_IMAGE=docker.io/continuouspipe/gcb-builder
GOOGLE_CONTAINER_BUILDER_VERSION=v8
GOOGLE_CONTAINER_BUILDER_SERVICE_ACCOUNT_PATH=/runtime/keys/google-container-builder.json

## How do you access your ContinuousPipe instance?
# Configure the URLs and ways you will access ContinuousPipe. The public URL is the URL
RIVER_API_URL=http://localhost:81
RIVER_UI_URL=http://localhost:80

## Security
# We need a password, a master key and a few certificates. We'll generate them for you or... you'll enter them :)
#
#+rsa-pair(JWT_PRIVATE_KEY_PATH JWT_PUBLIC_KEY_PATH JWT_PRIVATE_KEY_PASS_PHRASE)
#+file-to-propagate(JWT_PRIVATE_KEY_PATH)
#+file-to-propagate(JWT_PUBLIC_KEY_PATH)
#+ssl-certificate(SSL_CERTIFICATE_PRIVATE_KEY_PATH SSL_CERTIFICATE_CERTIFICATE_PATH SSL_CERTIFICATE_DOMAIN_NAME)
#
ADMIN_PASSWORD=
MASTER_API_KEY=
APP_SECRET=ThisIsASuperApiSecretToChange

#~ Note: Do not change these path values. They need to stay what they are.
JWT_PRIVATE_KEY_PATH=/runtime/keys/jwt-private.pem
JWT_PUBLIC_KEY_PATH=/runtime/keys/jwt-public.pem
JWT_PRIVATE_KEY_PASS_PHRASE=

SSL_CERTIFICATE_PRIVATE_KEY_PATH=/runtime/keys/server.key
SSL_CERTIFICATE_CERTIFICATE_PATH=/runtime/keys/server.crt
SSL_CERTIFICATE_DOMAIN_NAME=

## Managed cluster
# If you want to give the ability to users to directly use a cluster they did not configure. It's typically good
# for organisations or testing ContinuousPipe locally.
MANAGED_CLUSTER_ENABLED=true

# The DSN can have many different forms.
# Example: gke://service-account:[base64-encoded-service-account]@[project-id]/[cluster-identifier]
# Example: kinception://this (will use the current Kubernetes cluster)
# Example: null:// (nothing...)
MANAGED_CLUSTER_DSN=kinception://this

## Managed Docker Registry
# Some of your users will not have a Docker Registry ready for their application. By configuring this
# automation, ContinuousPipe will be able to generate a registry for them.
MANAGED_REGISTRY_ENABLED=false
MANAGED_REGISTRY_DSN=quay://token:[the-token]@[organisation]

## Support & Feedback
# If you would like to allow your users to get some support from you, give you some feedback and this
# sort of things, select the integrations you'd like.
#
#+only-if(INTERCOM_APPLICATION_ID):(INTERCOM_ENABLED=true)
#
INTERCOM_ENABLED=false
INTERCOM_APPLICATION_ID=none

STATIS_METER_ENABLED=false
STATIS_METER_WRITE_KEY=none

## Development & Audit
#
#+file-to-propagate(GOOGLE_CLOUD_AUDIT_LOG_SERVICE_ACCOUNT_PATH)
#+only-if(GOOGLE_CLOUD_AUDIT_LOG_PROJECT_ID):(GOOGLE_CLOUD_AUDIT_ENABLED=true)
#+only-if(GOOGLE_CLOUD_AUDIT_LOG_SERVICE_ACCOUNT_PATH):(GOOGLE_CLOUD_AUDIT_ENABLED=true)
#
#+only-if(API_SENTRY_DSN):(SENTRY_ENABLED=true)
#+only-if(UI_SENTRY_DSN):(SENTRY_ENABLED=true)
#
GOOGLE_ANALYTICS_TRACKER=none

SENTRY_ENABLED=false
API_SENTRY_DSN=
UI_SENTRY_DSN=

GOOGLE_CLOUD_AUDIT_ENABLED=false
GOOGLE_CLOUD_AUDIT_LOG_PROJECT_ID=
GOOGLE_CLOUD_AUDIT_LOG_SERVICE_ACCOUNT_PATH=/runtime/keys/google-cloud-audit-log.json

## Billing
BILLING_ENABLED=false
